@use 'sass:math';
@use "sass:selector";
@import './theme';

@mixin unify-parent($child) {
  @at-root #{selector.unify(&, $child)} {
    @content;
  }
}

/* Reset */

*, ::after, ::before {
  box-sizing: border-box;
}

[hidden] {
  display: none!important;
}

a {
  text-decoration: none;
  background-color: transparent;
}

button, input {
  overflow: visible;
}

button, input, optgroup, select, textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #6c757d;
  text-align: left;
  caption-side: top;
}

dd {
  margin-left: 0;
}

dl, ol, ul {
  margin-top: .5rem;
  margin-bottom: .5rem;
}

dt {
  font-weight: 700;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

img {
  border-style: none;
  vertical-align: middle;
}

input[type=checkbox], input[type=radio] {
  box-sizing: border-box;
  padding: 0;
}

label {
  display: inline-block;
  margin-bottom: 0.5rem;
}

small {
  font-size: 80%;
  font-weight: 400;
}

svg {
  overflow: hidden;
  vertical-align: middle;
}

table {
  border-collapse: collapse;
}

th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}

.container, .container-fluid {
  margin: 1rem auto;
  padding: 0 1rem;
  width: 100%;
}

.container {
  @media (min-width: $screenSm) {
    & {
      max-width: 540px;
    }
  }
  @media (min-width: $screenMd) {
    & {
      max-width: 720px;
    }
  }
  @media (min-width: $screenLg) {
    & {
      max-width: 960px;
    }
  }
  @media (min-width: $screenXl) {
    & {
      max-width: 1140px;
    }
  }
}

/* CDE Theme */

html {
  color: $nlmTextColor;
  font-family: Roboto, Helvetica Neue, Arial, Tahoma, sans-serif;
  font-size: $nlmRem;
  font-weight: 400;
  line-height: $nlmLineHeight;
}

body {
  @extend html;
  margin: 0;
  padding: 0;
}

a,
.fake-button, /* fake link requires role="button" tabindex="0" */ /* icon button requires title="" */
.fake-link /* fake link requires role="link" tabindex="0" */
{
  color: $linkColor;
  cursor: pointer;
  transition: all .1s ease-in-out;

  .mat-icon {
    vertical-align: text-bottom;
  }

  &:hover mat-icon {
    filter: drop-shadow(0 0 3px #888);
  }
}

a.no-link {
  color: inherit;

  &:hover {
    color: inherit;
    text-decoration: inherit;
  }
}

a:hover, .fake-link:hover {
  text-decoration: underline;
}

mat-icon.fake-button:hover {
  filter: drop-shadow(0 0 3px #888);
}

@mixin h1 {
  font-size: 2.5rem;
  font-weight: 300;
}

h1 {
  @extend body;
  @include h1;
  margin-bottom: .33em;

  @media (max-width: $screenMd - 1px) {
    & {
      font-size: 1.5rem;
    }
  }

  .button {
    vertical-align: text-bottom;
  }

  .mat-icon {
    @include h1;
    //height: 1em;
    line-height: $nlmLineHeight;
    margin-bottom: 0;
    vertical-align: text-top;
    //width: 1em;
  }
}

@mixin h2 {
  font-size: 1.25rem;
  font-weight: 700;
}

h2 {
  @extend body;
  @include h2;
  margin-bottom: .5rem;

  .mat-icon {
    @include h2;
    //height: 1em;
    line-height: $nlmLineHeight;
    vertical-align: text-top;
    //width: 1em;
  }
}

@mixin h3 {
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.15;
}

h3, h4, h5, h6 {
  @extend body;
  @include h3;
  margin-bottom: .5rem;

  .mat-icon {
    @include h3;
    //height: 1em;
    line-height: $nlmLineHeight;
    margin-bottom: 0;
    //vertical-align: text-top;
    //width: 1em;

    // workaround for small font size
    font-size: 1.25rem;
    vertical-align: sub;
  }
}

.hero {
  @extend body;
  font-family: Merriweather Web, Georgia, Cambria, Times New Roman, Times, serif;
  font-size: 42px;
  margin-top: 20px;

  @media (max-width: 585px) {
    font-size: 28px;
  }
}

.subtitle {
  @extend body;
  font-size: 1.25rem;
}

.menuButton1 {
  @extend body;
  font-size: 1.125rem;
  font-weight: 500;
}

.note {
  @extend body;
  font-size: .88rem;
  font-style: italic;
}

.button {
  @extend body;
  background-color: $nlmColorPrimary;
  border: 0;
  border-radius: 3px;
  color: $nlmColorLightest;
  filter: drop-shadow(0 2px 2px rgba(0, 0, 0, .15));
  margin-bottom: .5rem;
  margin-right: .5rem;
  padding: .5rem 1rem;
  transition: all .2s ease-in-out;

  @include unify-parent("a") {
    color: $nlmColorLightest;
    display: inline-block;

    &:focus, &:hover {
      text-decoration: none;
    }
  }

  mat-icon {
    font-size: 1.5rem;
    line-height: 1rem;
    height: 1rem;
    width: 1rem;
    vertical-align: text-top;
    //margin-right: .5rem;

    margin-right: 0.625rem;
    margin-top: 1px;

    svg {
      vertical-align: baseline;
      height: 24px;
      width: 24px;
      margin-top: -4px;
    }
  }

  &:hover {
    background-color: $nlmColorPrimaryLight;
    transition: all .1s ease-in-out;
  }

  &:active, &.active {
    background-color: $nlmColorLightest;
    color: $nlmColorPrimary;
  }

  &:disabled {
    background-color: $nlmColorDisabled;
  }

  &.success {
    background-color: $nlmColorSuccess;

    &:hover {
      background-color: $nlmColorSuccessLight;
    }

    &:active, &.active {
      background-color: $nlmColorLightest;
      color: $nlmColorSuccess;
    }

    &:disabled {
      background-color: $nlmColorDisabled;
    }
  }

  &.fail {
    background-color: $nlmColorFail;

    &:hover {
      background-color: $nlmColorFailLight;
    }

    &:active, &.active {
      background-color: $nlmColorLightest;
      color: $nlmColorFail;
    }

    &:disabled {
      background-color: $nlmColorDisabled;
    }
  }

  &.secondary {
    background-color: $nlmColorSecondary;

    &:hover {
      background-color: $nlmColorSecondaryLight;
    }

    &:active, &.active {
      background-color: $nlmColorLightest;
      color: $nlmColorSecondary;
    }

    &:disabled {
      background-color: $nlmColorDisabled;
    }
  }

  &.light {
    background-color: $nlmColorLightest;
    border: $nlmColorPrimary solid 1px;
    color: $nlmColorPrimary;
    padding: 7px 15px;

    &:hover {
      background-color: $nlmColorPrimaryLightest;
      border: $nlmColorPrimaryLightest solid 1px;
    }

    &:active, &.active {
      background-color: $nlmColorPrimaryLight;
      border: $nlmColorPrimaryLight solid 1px;
      color: $nlmColorLightest;
    }

    &:disabled {
      background-color: $nlmColorLightest;
      border: $nlmColorDisabled solid 1px;
      color: $nlmColorDisabled;
    }

    &.success {
      border: $nlmColorSuccess solid 1px;
      color: $nlmColorSuccess;

      &:hover {
        background-color: $nlmColorSuccessLightest;
        border: $nlmColorSuccessLightest solid 1px;
      }

      &:active, &.active {
        background-color: $nlmColorSuccessLight;
        border: $nlmColorSuccessLight solid 1px;
        color: $nlmColorLightest;
      }
    }

    &.fail {
      border: $nlmColorFail solid 1px;
      color: $nlmColorFail;

      &:hover {
        background-color: $nlmColorFailLightest;
        border: $nlmColorFailLightest solid 1px;
      }

      &:active, &.active {
        background-color: $nlmColorFailLight;
        border: $nlmColorFailLight solid 1px;
        color: $nlmColorLightest;
      }
    }

    &.secondary {
      border: $nlmColorSecondary solid 1px;
      color: $nlmColorSecondary;

      &:hover {
        background-color: $nlmColorSecondaryLightest;
        border: $nlmColorSecondaryLightest solid 1px;
      }

      &:active, &.active {
        background-color: $nlmColorSecondaryLight;
        border: $nlmColorSecondaryLight solid 1px;
        color: $nlmColorLightest;
      }
    }
  }

  &.small {
    font-size: 12px;
    margin-bottom: 0;
    padding: 5px 10px;
    white-space: nowrap;

    mat-icon {
      font-size: 16px;
      height: 1em;
      margin: 0;
      width: 1.2em;
      vertical-align: sub;
    }
  }
}

section {
  margin-bottom: 1rem;
}

.actions, .mat-dialog-actions {
  margin-left: auto;
  width: fit-content;
}

.alert {
  position: relative;
  padding: 0.75rem 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

.alert-danger {
  color: #721c24;
  background-color: #f8d7da;
  border-color: #f5c6cb;
}

.alert-info {
  color: #0c5460;
  background-color: #d1ecf1;
  border-color: #bee5eb;
}

.alert-warning {
  color: #856404;
  background-color: #fff3cd;
  border-color: #ffeeba;
}

.badge {
  border-radius: .25rem;
  display: inline-block;
  font-size: 75%;
  font-weight: 700;
  line-height: 1;
  margin: 0 .25rem;
  padding: .25em .4em;
  text-align: center;
  vertical-align: text-bottom;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
  white-space: nowrap;

  &.badge-danger {
    color: #fff;
    background-color: #dc3545;
  }

  &.badge-info {
    color: #fff;
    background-color: #17a2b8;
  }

  &.badge-secondary {
    color: #fff;
    background-color: #6c757d;
  }

  &.badge-success {
    color: #fff;
    background-color: #28a745;
  }

  &.badge-warning {
    color: #212529;
    background-color: #ffc107;
  }

  @include unify-parent("a") {
    &:focus, &:hover {
      text-decoration: none;
    }

    &.badge-danger:focus, &.badge-danger:hover {
      color: #fff;
      background-color: #bd2130;
    }

    &.badge-info:focus, &.badge-info:hover {
      color: #fff;
      background-color: #117a8b;
    }

    &.badge-secondary:focus, &.badge-secondary:hover {
      color: #fff;
      background-color: #545b62;
    }

    &.badge-success:focus, &.badge-success:hover {
      color: #fff;
      background-color: #1e7e34;
    }

    &.badge-warning:focus, &.badge-warning:hover {
      color: #212529;
      background-color: #d39e00;
    }
  }
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border: 1px solid rgba(0,0,0,.125);
  border-radius: 0.25rem;

  .card-header {
    padding: 0.75rem 1.25rem;
    margin-bottom: 0;
    background-color: rgba(0,0,0,.03);
    border-bottom: 1px solid rgba(0,0,0,.125);

    &:first-child {
      border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
    }
  }

  .card-body {
    flex: 1 1 auto;
    min-height: 1px;
    padding: 1.25rem;

    .card-text:last-child {
      margin-bottom: 0;
    }
  }

  .card-footer {
    padding: 0.75rem 1.25rem;
    background-color: rgba(0,0,0,.03);
    border-top: 1px solid rgba(0,0,0,.125);

    &:last-child {
      border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);
    }
  }
}

.darken:hover {
    filter: brightness(.7);
}

.dropdown {
  position: relative;

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none;
    float: left;
    min-width: 10rem;
    padding: 0.5rem 0;
    margin: 0.125rem 0 0;
    font-size: 1rem;
    color: #212529;
    text-align: left;
    list-style: none;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid rgba(0,0,0,.15);
    border-radius: 0.25rem;

    &.show {
      display: block;
      transform: translate3d(0px, 36px, 0px);
      top: 0;
      left: 0;
      will-change: transform;
    }

    .dropdown-item {
      display: block;
      width: 100%;
      padding: 0.25rem 1.5rem;
      clear: both;
      font-weight: 400;
      color: #212529;
      text-align: inherit;
      white-space: nowrap;
      background-color: transparent;
      border: 0;

      &:focus, &:hover {
        color: #16181b;
        text-decoration: none;
        background-color: #e9ecef;
      }
    }
  }
}

.forNotSmScreen {
  @media (min-width: $screenSm) {
      display: none !important;
  }
}

.forSmScreen {
  display: none;
  @media (min-width: $screenSm) {
      display: revert !important;
  }
}

.forNotMdScreen {
  @media (min-width: $screenMd) {
      display: none !important;
  }
}

.forMdScreen {
  display: none;
  @media (min-width: $screenMd) {
      display: revert !important;
  }
}

.forNotLgScreen {
  @media (min-width: $screenLg) {
      display: none !important;
  }
}

.forLgScreen {
  display: none;
  @media (min-width: $screenLg) {
      display: revert !important;
  }
}

.forNotXlScreen {
  @media (min-width: $screenXl) {
      display: none !important;
  }
}

.forXlScreen {
  display: none;
  @media (min-width: $screenXl) {
      display: revert !important;
  }
}

.iconButton { /* fake button requires role="button" tabindex="0" */
  cursor: pointer;

  &:hover {
    color: $linkColor;
  }
}

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  width: 100%;

  > .custom-file,
  > .custom-select,
  > .form-control,
  > .form-control-plaintext {
    position: relative;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    width: 1%;
    min-width: 0;
    margin-bottom: 0;
  }

  > .input-group-append > .button,
  > .input-group-append > .input-group-text,
  > .input-group-prepend:first-child > .button:not(:first-child),
  > .input-group-prepend:first-child > .input-group-text:not(:first-child),
  > .input-group-prepend:not(:first-child) > .button,
  > .input-group-prepend:not(:first-child) > .input-group-text {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &.has-validation > .input-group-append:nth-last-child(n+3) > .button,
  &.has-validation > .input-group-append:nth-last-child(n+3) > .input-group-text,
  &:not(.has-validation) > .input-group-append:not(:last-child) > .button,
  &:not(.has-validation) > .input-group-append:not(:last-child) > .input-group-text,
  > .input-group-append:last-child > .button:not(:last-child):not(.dropdown-toggle),
  > .input-group-append:last-child > .input-group-text:not(:last-child),
  > .input-group-prepend > .button,
  > .input-group-prepend > .input-group-text {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .input-group-append, .input-group-prepend {
    display: flex;
    z-index: 1;
  }

  .input-group-prepend {
    margin-right: -1px;
  }

  .input-group-append {
    margin-left: -1px;
  }

  .input-group-text {
    display: flex;
    align-items: center;
    padding: 0.375rem 0.75rem;
    margin-bottom: 0;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    text-align: center;
    white-space: nowrap;
    background-color: #e9ecef;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;

    input[type=checkbox], input[type=radio] {
      margin-top: 0;
    }
  }
}

.jumbotron {
  padding: 1rem;
  text-align: center;
  @media (min-width: 576px) {
    padding: 2rem;
  }
}

.mB {
  margin-bottom: .5rem;
}

.mL {
  margin-left: .5rem;
}

.mN {
  margin: 0;
}

.mR {
  margin-right: .5rem;
}

.mT {
  margin-top: .5rem;
}

.responsiveGrid {
  display: grid;
  gap: 10px;
  grid-template-columns: 1fr;

  @media (min-width: $screenSm) {
    grid-template-columns: 1fr 1fr;
  }

  @media (min-width: $screenLg) {
    grid-template-columns: 1fr 1fr 1fr;
  }

  @media (min-width: $screenXl) {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }

  > * {
    min-width: 100%;
  }
}

.screenReaderOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}


.splitHalf {
  display: grid;
  flex-flow: row nowrap;
  grid-template-columns: 1fr 1fr;
  gap: 5px;

  > * {
    min-width: 0;
    width: 100%;
  }
}

.splitQuarter {
  display: grid;
  flex-flow: row nowrap;
  gap: 5px;
  grid-template-columns: 1fr 3fr;

  > * {
    min-width: 0;
    width: 100%;
  }
}

$buttonHeight: $nlmRem * $nlmLineHeight + (.5 + .5) * $nlmRem;
$formControlHeight: 38px;

.stack {
  $nonMaterialTextAlign: 26px;
  align-items: center;
  display: flex;
  flex: 0 0 auto;
  flex-flow: row wrap;
  gap: 0 .5rem;

  > .button {
    margin: 0 0 $nonMaterialTextAlign - math.div($buttonHeight, 2);
  }

  > .form-group {
    margin-bottom: $nonMaterialTextAlign - math.div($formControlHeight, 2);
  }

  > .form-control {
    margin-bottom: $nonMaterialTextAlign - math.div($formControlHeight, 2);
    width: auto;
  }
}

.stretchBar {
  display: flex !important;
  gap: 0 2px;

  > * {
    flex-shrink: 0;
  }

  .shrink {
    flex-shrink: 1;
    min-width: 0;
    overflow: hidden;
    text-wrap: none;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .grow {
    flex-grow: 1;
    min-width: 0;
    overflow: hidden;
    text-wrap: none;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

.text-center {
  text-align: center!important;
}

.text-muted {
  color: #696f74 !important;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.uswdsCard {
  border: $nlmColorSecondaryLightest 2px solid;
  border-radius: .25rem;
  padding: 1rem;
  max-width: 454px;
  > header {
    margin-bottom: .5rem;
  }
  > img {
    width: 100%;
  }
  .body {}
  > footer {
    margin-top: .5rem;
  }
}

.w-25 {
  width: 25%;
}

.w-50 {
  width: 50%;
}

.w-75 {
  width: 75%;
}

.w-100 {
  width: 100%;
}

@mixin generate-cde-property($label, $screenSets) {
  dl.cde-property#{$label} {
    display: flex;
    flex-wrap: wrap;

    > * {
      min-width: 0;
    }

    dt {
      flex: 0 0 100%;

      @each $minWidth, $cols in $screenSets {
        $titlePercent: math.div($cols, 12) * 100%;
        @media (min-width: $minWidth) {
          flex: 0 0 $titlePercent;
          overflow-wrap: anywhere;
          padding-bottom: 0.5em;
          text-align: right;
        }
      }
    }

    dd {
      flex: 0 0 100%;
      padding-bottom: .5em;
      padding-left: 1em;

      label {
        margin: 0;
      }

      @each $minWidth, $cols in $screenSets {
        $titlePercent: math.div($cols, 12) * 100%;
        @media (min-width: $minWidth) {
          flex: 0 0 100% - $titlePercent;
        }
      }
    }
  }
}

@include generate-cde-property('-xs', ($screenSm: 5));
@include generate-cde-property('', ($screenSm: 3, $screenMd: 2));
@include generate-cde-property('-md', ($screenSm: 4, $screenMd: 3, $screenLg: 2));
@include generate-cde-property('-lg', ($screenMd: 4, $screenLg: 3, $screenXl: 2));
@include generate-cde-property('-xl', ($screenLg: 4, $screenXl: 3));

table.table {
  width: 100%;
  margin-bottom: 1rem;
  color: #212529;

  & td, & th {
    padding: 0.75rem;
    vertical-align: top;
    border-top: 1px solid #dee2e6;
  }
}

table.table-bordered {
  border: 1px solid #dee2e6;

  & td, & th {
    border: 1px solid #dee2e6;
  }
}

table.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

table.table-striped tbody tr:nth-of-type(odd) {
  background-color: rgba(0,0,0,.05);
}

.clearfix {
  clear: both;
}

.d-block {
  display: block;
}

.form-group {
  margin-bottom: 1rem;
}

.form-control {
  display: block;
  width: 100%;
  height: calc(1.5em + 0.75rem + 2px);
  padding: .375rem .75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: $formInputTextColor;
  background-color: $nlmBackgroundColor;
  background-clip: padding-box;
  border: 1px solid $formInputBorderColor;
  border-radius: 0.25rem;
  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;

  &:focus {
    color: $formInputTextColor;
    background-color: $nlmBackgroundColor;
    border-color: $formInputBorderFocusColor;
    outline: 0;
    box-shadow: 0 0 0 .2rem rgb(0 123 255 / 25%);
  }
}

.list-group {
  border-radius: 0.25rem;
  display: flex;
  flex-direction: column;
  margin-bottom: 0;
  padding-left: 0;

  .list-group-item {
    background-color: $nlmBackgroundColor;
    border: 1px solid rgba(0, 0, 0, .125);
    display: block;
    padding: 0.75rem 1.25rem;
    position: relative;

    &:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }

    &:last-child {
      border-bottom-right-radius: inherit;
      border-bottom-left-radius: inherit;
    }
  }
}


/* BEGIN Bootstrap overrides */
@media (min-width: 575px) {
  .text-right-md {
    text-align: right
  }
}

.modal-lg {
  max-width: 90%;
}

.modal {
  overflow-y: scroll !important;
}

/* END Bootstrap overrides */


/* BEGIN Feedback */
@media (max-width: $screenMd) {
  .feedback-btn {
    display: none;
  }
}

.feedback-btn.feedback-btn-gray {
  font-family: inherit !important;
  border-top-left-radius: 6px !important;
  border-top-right-radius: 6px !important;
  font-size: 11px;
  right: 20px !important;
  z-index: 3;
}

#feedback-note-tmp {
  min-height: 200px;
}

#feedback-overview-note {
  width: 350px;
  height: 317px !important;
}

#feedback-highlighter {
  cursor: move;
  height: 574px !important;
}

/* END Feedback */


/* BEGIN Font Awesome */

.spin {
  -webkit-animation: spin 2s infinite linear;
  animation: spin 2s infinite linear;
}

.pulse {
  -webkit-animation: spin 1s infinite steps(8);
  animation: spin 1s infinite steps(8);
}

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

/* END Font Awesome */


/* BEGIN MEDIA */

@media print {
  @page {
    size: 330mm 427mm;
    margin: 14mm;
  }

  .container {
    width: 1170px;
  }

  .keep-with-previous {
    page-break-before: avoid;
    break-before: avoid;
  }

  .keep-together {
    page-break-inside: avoid;
    break-inside: avoid;
  }

  .noPrint {
    display: none !important;
  }
}

/* END MEDIA */


/* BEGIN validation error */

input.ng-invalid:not([matInput]) {
  border-left: 5px solid #a94442 !important;
}

.ng-valid[required]:not(mat-form-field):not([matInput]):not(mat-select):not([matNativeControl]), .ng-valid.required {
  border-left: 5px solid #42A948; /* green */
}

.ng-invalid:not(form):not(mat-form-field):not([matInput]):not([matNativeControl]):not(mat-select) {
  border-left: 5px solid #a94442; /* red */
}

/* END validation error */
