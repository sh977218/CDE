/* Navigation */
$navBackgroundColor: #343a40;
$navHeight: 56px; /*NAVIGATION_HEIGHT*/

/* Links */
$linkColor: #0f4e9d;

@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$candy-app-primary: mat-palette($mat-indigo, A50, A98, A149);
$nlmblue: (
        A100: #326295,
        A200: #326295,
        A400: #326295,
        contrast: (
                50: $dark-primary-text,
                100: $dark-primary-text,
                200: $dark-primary-text,
                300: $light-primary-text,
                400: $light-primary-text,
        )
);
$candy-app-primary: mat-palette($nlmblue, A100, A200, A400);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$candy-app-theme: mat-light-theme((
        color: (
                primary: $candy-app-primary,
                accent: $candy-app-accent,
                warn: $candy-app-warn,
        )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
