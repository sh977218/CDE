apply plugin: 'java'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
}

dependencies {
    def seleniumVersion = "2.42.0"
    testCompile group: 'org.testng', name: 'testng', version: '6.8'
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

    testCompile "com.jayway.restassured:rest-assured:2.3.2"

    testCompile "net.lingala.zip4j:zip4j:1.3.2"
}

tasks.withType(Test) {
    systemProperty 'testUrl', System.getProperty('testUrl', "http://localhost:3001")
    systemProperty 'timeout', System.getProperty('timeout', "20")
    systemProperty 'hubUrl', System.getProperty('hubUrl', 'localhost:5444')
    systemProperty 'browser', project.hasProperty('browser') ? browser : "chrome";
    systemProperty 'downloadFolder', project.hasProperty('downloadFolder') ? downloadFolder : "/usr/nlm/selenium/cde/downloads/";
    systemProperty 'tempFolder', project.hasProperty('tempFolder') ? tempFolder : "/tmp/";
}

test {
    useTestNG()
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    maxParallelForks = Integer.parseInt(forkNb)

    testLogging {
        events "standardOut", "standardError"
    }
}